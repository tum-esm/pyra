name: "build-on-release"
on:
  push:
    branches:
      - release

defaults:
  run:
    working-directory: packages/ui

jobs:
  publish-tauri:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read version from package.json
        id: read_version
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'packages/ui/package.json';
            const packageJson = JSON.parse(fs.readFileSync(path, 'utf8'));
            core.setOutput('version', packageJson.version);

      - name: Print version number
        run: echo "Building UI for PYRA version ${{ steps.read_version.outputs.version }}"

      - name: set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: set up bun
        uses: oven-sh/setup-bun@v2

      - name: set up rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache-workspaces: "./packages/ui/src-tauri -> target"

      - name: tauri build cache
        uses: actions/cache@v4
        with:
          path: packages/ui/src-tauri/target
          key: ${{ runner.os }}-tauri-cache

      - name: install dependencies
        run: bun install

      - name: build image
        run: bun run tauri build

      - name: create draft release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.read_version.outputs.version }}
          name: v${{ steps.read_version.outputs.version }} (generated by CI)
          draft: true
          prerelease: true
          body: "TODO: description"
          target_commitish: release
          files: |
            packages/ui/src-tauri/target/release/bundle/msi/Pyra UI_${{ steps.read_version.outputs.version }}_x64_en-US.msi
            packages/ui/src-tauri/target/release/bundle/nsis/Pyra UI_${{ steps.read_version.outputs.version }}_x64-setup.exe
