import os
import smtplib, ssl
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import traceback

dir = os.path.dirname
PROJECT_DIR = dir(dir(dir(dir(os.path.abspath(__file__)))))


def _send_email(setup: dict, text: str, html: str, subject: str):
    sender_email = setup["error_email"]["sender_address"]
    sender_password = setup["error_email"]["sender_password"]
    recipients = setup["error_email"]["recipients"].replace(" ", "").split(",")

    message = MIMEMultipart("alternative")
    message["Subject"] = subject
    message["From"] = sender_email
    message["To"] = ", ".join(recipients)

    # The email client will try to render the last part first
    message.attach(MIMEText(text, "plain"))
    message.attach(MIMEText(html, "html"))

    # Create secure connection with server and send email
    context = ssl.create_default_context()
    with smtplib.SMTP_SSL("smtp.gmail.com", 465, context=context) as server:
        server.login(sender_email, sender_password)
        server.sendmail(
            from_addr=sender_email, to_addrs=recipients, msg=message.as_string()
        )


def handle_resolved_exception(setup: dict):

    # TODO: add instance name

    text = f"""\
    All exceptions have been resolved.\n\n
    This email has been generated by Pyra 4 automatically.
    """

    html = f"""\
    <html>
      <body>
        All exceptions have been resolved.<br/><br/>
        This email has been generated by Pyra 4 automatically.
      </body>
    </html>
    """

    _send_email(setup, text, html, "✅ PYRA issues resolved")


def handle_occured_exception(setup: dict, exception: Exception):

    # TODO: add instance name

    with open(f"{PROJECT_DIR}/logs/info.log") as f:
        latest_log_lines = f.readlines()
    if len(latest_log_lines) > 20:
        latest_log_lines = latest_log_lines[:20]

    tb = "\n".join(traceback.format_exception(exception))
    logs = "".join(latest_log_lines)

    text = f"""\
    A {type(exception).__name__} has occured. Details:\n
    {tb}
    \n
    Last 20 log lines:
    {logs}\n
    This email has been generated by Pyra 4 automatically.
    """

    pre_tag = '<pre style="background-color: #f1f5f9; color: #334155; padding: 8px 8px 12px 12px; border-radius: 3px; max-width: full; overflow-x: scroll;">'

    html = f"""\
    <html>
      <body style="color: #0f172a;">
        <strong>A <span style="color: #ef4444">{type(exception).__name__}</span> has occured. Details:</strong><br/>
        {pre_tag}<code>{tb}</code></pre><br/>
        <strong>Last 20 log lines:</strong><br/>
        {pre_tag}<code>{logs}</code></pre><br/>
        <em>This email has been generated by Pyra 4 automatically.</em>
      </body>
    </html>
    """

    _send_email(setup, text, html, "❗️ PYRA issue occured")
